# .github/workflows/sg-it-oooh-runnning-ec2-instances.yml
# This GitHub Actions workflow is designed to manage the Terraform configuration for the sg-it-oooh-runnning-ec2-instances project.
# It initializes Terraform, validates the configuration, plans changes, and applies them when changes are pushed to the main branch.
# The workflow is triggered on pushes to the main branch and pull requests targeting the main branch.
# It also supports manual triggering via workflow_dispatch.
# The workflow uses AWS credentials stored in GitHub secrets for authentication and requires the Terraform API token for operations.
# The workflow is designed to ensure that the ci/cd pipeline is managed in a consistent and controlled manner, with detailed comments on pull requests for visibility into the changes being made.

name: ' Terraform | AWS | OIDC | sg-it-oooh-runnning-ec2-instances '

permissions:
  id-token: write
  contents: write
  pull-requests: write
  issues: write
  security-events: write
  repository-projects: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: null
    # Allows manual triggering
jobs:
  iac-sast:
    name: IaC SAST Scan with Trivy
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'config'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Post Trivy PR Comment
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
         github-token: ${{ secrets.GITHUB_TOKEN }}
         script: |
            const fs = require('fs');
            const report = fs.readFileSync('$/trivy-results.txt', 'utf8');
            const body = `### üõ°Ô∏è IaC SAST Scan with Trivy\n\`\`\`\n${report}\n\`\`\``;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });  

  
